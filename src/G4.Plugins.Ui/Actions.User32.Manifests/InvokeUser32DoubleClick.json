{
	"author": {
		"name": "Roei Sabag",
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/"
	},
	"categories": [
		"User32"
	],
	"context": {
		"integration": {
			"sequentialWorkflow": {
				"$type": "Action",
				"componentType": "task",
				"iconProvider": "arrow-pointer",
				"model": "ActionRuleModel"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"The primary purpose of the `InvokeUser32DoubleClick` plugin is to perform double-click actions using the Windows User32 API. ",
		"This allows automation scripts to interact with native UI elements in desktop applications, either by double-clicking at specific coordinates or on a target element with configurable offsets and alignment.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                       | Description                                                                                                     |",
		"|-------------------------------|-----------------------------------------------------------------------------------------------------------------|",
		"| Native Double-Click Action    | Executes double-click actions using the User32 API for native Windows UI elements.                              |",
		"| Coordinate-based Double-Click | Supports double-clicking at specific (X, Y) coordinates when no target element is provided.                     |",
		"| Element-specific Double-Click | Moves the mouse to a target element with configurable offsets and alignment before performing the double-click. |",
		"",
		"### Usage in RPA",
		"",
		"| Usage                | Description                                                                                                              |",
		"|----------------------|--------------------------------------------------------------------------------------------------------------------------|",
		"| Desktop Automation   | Integrate with RPA workflows to perform double-click actions on native desktop UI elements using the Windows User32 API. |",
		"| Flexible Interaction | Automate complex scenarios by specifying exact double-click coordinates or targeting specific UI elements with offsets.  |",
		"",
		"### Usage in Automation Testing",
		"",
		"| Usage              | Description                                                                                                                  |",
		"|--------------------|------------------------------------------------------------------------------------------------------------------------------|",
		"| UI Testing         | Verify the functionality of native UI components by simulating double-click actions with configurable offsets and alignment. |",
		"| Regression Testing | Ensure consistent behavior of UI elements after updates by automating double-click sequences using the User32 API.           |",
		"",
		"### Platform",
		"",
		"This plugin is designed to work on **Windows** only."
	],
	"examples": [
		{
			"description": [
				"Perform a double-click action at specific coordinates (X: 100, Y: 200) without targeting any element."
			],
			"rule": {
				"Argument": "{{$ --X:100 --Y:200}}",
				"PluginName": "InvokeUser32DoubleClick"
			}
		},
		{
			"description": [
				"Perform a double-click action on a UI element identified by the XPath `//button[@id='SubmitButton']`, with an offset of 10 pixels horizontally and 20 pixels vertically, aligned to the TopLeft of the element."
			],
			"rule": {
				"Argument": "{{$ --OffsetX:10 --OffsetY:20 --Alignment:TopLeft}}",
				"Locator": "Xpath",
				"OnElement": "//button[@id='SubmitButton']",
				"PluginName": "InvokeUser32DoubleClick"
			}
		}
	],
	"key": "InvokeUser32DoubleClick",
	"manifestVersion": 4,
	"parameters": [
		{
			"default": "0",
			"description": [
				"Specifies the horizontal offset (in pixels) to adjust the double-click position relative to the target element."
			],
			"mandatory": false,
			"name": "OffsetX",
			"type": "Number"
		},
		{
			"default": "0",
			"description": [
				"Specifies the vertical offset (in pixels) to adjust the double-click position relative to the target element."
			],
			"mandatory": false,
			"name": "OffsetY",
			"type": "Number"
		},
		{
			"default": "MiddleCenter",
			"description": [
				"Defines the alignment of the double-click relative to the target element. Choose an alignment that best fits your UI layout.",
				"For example, 'MiddleCenter' will double-click at the center of the element, while 'TopLeft' will double-click at the upper left corner."
			],
			"mandatory": false,
			"name": "Alignment",
			"type": "String",
			"values": [
				{
					"description": [
						"Double-click at the top left corner of the element."
					],
					"name": "TopLeft"
				},
				{
					"description": [
						"Double-click at the top center of the element."
					],
					"name": "TopCenter"
				},
				{
					"description": [
						"Double-click at the top right corner of the element."
					],
					"name": "TopRight"
				},
				{
					"description": [
						"Double-click at the middle left side of the element."
					],
					"name": "MiddleLeft"
				},
				{
					"description": [
						"Double-click at the middle right side of the element."
					],
					"name": "MiddleRight"
				},
				{
					"description": [
						"Double-click at the bottom left corner of the element."
					],
					"name": "BottomLeft"
				},
				{
					"description": [
						"Double-click at the bottom center of the element."
					],
					"name": "BottomCenter"
				},
				{
					"description": [
						"Double-click at the bottom right corner of the element."
					],
					"name": "BottomRight"
				},
				{
					"description": [
						"Double-click at the center of the element."
					],
					"name": "MiddleCenter"
				}
			]
		},
		{
			"default": "0",
			"description": [
				"Specifies the X coordinate for a double-click action when no target element is provided."
			],
			"mandatory": false,
			"name": "X",
			"type": "Number"
		},
		{
			"default": "0",
			"description": [
				"Specifies the Y coordinate for a double-click action when no target element is provided."
			],
			"mandatory": false,
			"name": "Y",
			"type": "Number"
		}
	],
	"pluginType": "Action",
	"properties": [
		{
			"default": "Xpath",
			"description": [
				"Specifies the locator strategy to find the UI element. The only supported locator is `Xpath`."
			],
			"mandatory": false,
			"name": "Locator",
			"type": "String"
		},
		{
			"description": [
				"Specifies the XPath for the target UI element where the double-click will be performed.",
				"This property is used when an element is targeted for the double-click action."
			],
			"mandatory": false,
			"name": "OnElement",
			"type": "String"
		},
		{
			"description": [
				"Specifies the parameters expression for the double-click action.",
				"Use this expression to dynamically set values such as offsets, alignment, and coordinates."
			],
			"mandatory": false,
			"name": "Argument",
			"type": "String|Expression"
		}
	],
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"scopes": [
		"WindowsNative"
	],
	"summary": [
		"The `InvokeUser32DoubleClick` plugin performs double-click actions using the Windows User32 API. ",
		"It supports both coordinate-based double-clicks when no target element is provided and element-specific double-clicks with configurable offsets and alignment. ",
		"This plugin is designed for desktop UI automation and testing on Windows platforms."
	]
}
