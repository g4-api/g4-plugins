{
	"aliases": [
		"NewScriptResult",
		"script"
	],
	"author": {
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/",
		"name": "Roei Sabag"
	},
	"categories": [
		"WebDriver"
	],
	"description": [
		"### Purpose",
		"",
		"The `New-ScriptResult` macro plugin is designed to execute custom scripts within automation workflows, providing flexibility and customization for various tasks. ",
		"This plugin retrieves data from a specific script element on the web page and sends it as keystrokes to an element within the automation workflow.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                | Description                                                                                                           |",
		"|------------------------|-----------------------------------------------------------------------------------------------------------------------|",
		"| Script Execution       | Executes custom scripts defined by users, enabling a wide range of automation actions.                                |",
		"| Parameterization       | Supports passing parameters to scripts for dynamic behavior, allowing adaptable automation workflows.                 |",
		"| Regex Pattern Matching | Includes support for regex pattern matching to extract specific portions of the script result for further processing. |",
		"",
		"### Usages in RPA",
		"",
		"| Usage            | Description                                                                             |",
		"|------------------|-----------------------------------------------------------------------------------------|",
		"| Custom Scripting | Integrate custom scripts into RPA workflows for specialized automation tasks.           |",
		"| Dynamic Behavior | Use parameterized scripts to handle dynamic elements or scenarios within RPA workflows. |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Usage                     | Description                                                                                                    |",
		"|---------------------------|----------------------------------------------------------------------------------------------------------------|",
		"| Custom Validation         | Execute custom validation scripts during automated testing, allowing for specific checks and verifications.    |",
		"| Dynamic Testing Scenarios | Use parameterized scripts to adapt to various testing scenarios, ensuring thorough and accurate test coverage. |"
	],
	"examples": [
		{
			"description": [
				"Use the `New-ScriptResult` macro plugin to execute a custom script that retrieves text from a script element and sends it as keystrokes to an input field identified by a CSS selector."
			],
			"rule": {
				"argument": "{{$New-ScriptResult --Src:return document.getElementById('ScriptData').innerText.trim(); --Pattern:\"^\\d+\"}}",
				"locator": "CssSelector",
				"onElement": "#inputField",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Use the `New-ScriptResult` macro plugin to execute a custom script that multiplies a given number by a provided argument and sends the result as keystrokes to an input field."
			],
			"rule": {
				"argument": "{{$New-ScriptResult --Src:function multiply(num){return parseInt(document.getElementById('ScriptDataNumber').value)*num}return multiply(arguments[0]); --Arg:5 --Pattern:\"^\\d+\"}}",
				"locator": "CssSelector",
				"onElement": "#inputField",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Use the `New-ScriptResult` macro plugin to execute a custom script that multiplies a number by two provided arguments and sends the result as keystrokes to an input field."
			],
			"rule": {
				"argument": "{{$New-ScriptResult --Src:function multiply(num1,num2){return parseInt(document.getElementById('ScriptDataNumber').value)*num1*num2}return multiply(arguments[0],arguments[1]); --Arg:5 --Arg:2 --Pattern:\"^\\d+\"}}",
				"locator": "CssSelector",
				"onElement": "#inputField",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Use the `New-ScriptResult` macro plugin to execute a custom script that multiplies a number by two arguments provided as an object and sends the result as keystrokes to an input field."
			],
			"rule": {
				"argument": "{{$New-ScriptResult --Src:function multiply(nums){return parseInt(document.getElementById('ScriptDataNumber').value)*nums.num1*nums.num2}return multiply(arguments[0]); --Arg:{\"num1\":5,\"num2\":2} --Pattern:\"^\\d+\"}}",
				"locator": "CssSelector",
				"onElement": "#inputField",
				"pluginName": "SendKeys"
			}
		}
	],
	"key": "New-ScriptResult",
	"manifestVersion": 4,
	"parameters": [
		{
			"description": [
				"Specifies the arguments to be passed to the custom script."
			],
			"mandatory": false,
			"multiple": true,
			"name": "Arg",
			"type": "Any"
		},
		{
			"description": [
				"Specifies the custom script to be executed."
			],
			"mandatory": true,
			"name": "Src",
			"type": "String"
		},
		{
			"default": "(?s).*",
			"description": [
				"Specifies a regex pattern used to match and extract the desired portion of the script result."
			],
			"mandatory": false,
			"name": "Pattern",
			"type": "Regex"
		}
	],
	"pluginType": "Macro",
	"protocol": {
		"apiDocumentation": "https://www.w3.org/TR/webdriver/#execute-script",
		"w3c": "POST /session/{session id}/execute/sync"
	},
	"scopes": [
		"Any"
	],
	"summary": [
		"The `New-ScriptResult` plugin executes custom scripts and returns the result as a macro output within automation workflows.",
		"In robotic process automation (RPA), it allows for dynamic script execution, enabling tailored actions and flexible automation.",
		"In automation testing, it supports custom validation and testing scenarios, enhancing the adaptability and coverage of test scripts."
	]
}
