{
	"aliases": [
		"Math",
		"ResolveMathExpression",
		"Calculate"
	],
	"author": {
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/",
		"name": "Roei Sabag"
	},
	"categories": [
		"Utilities"
	],
	"context": {
		"integration": {
			"github": {
				"document": "https://github.com/g4-api/g4-plugins/blob/main/docs/Macros/Resolve-MathExpression.md",
				"source": "https://github.com/g4-api/g4-plugins/blob/main/src/G4.Plugins.Common/Macros/ResolveMathExpression.cs"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"The ResolveMathExpression plugin lets automation workflows perform calculations on numbers at runtime.",
		"It makes it easy to add, subtract, multiply, divide, exponentiate, or use modulus in a process.",
		"It also supports options for sorting, rounding, and absolute values.",
		"These features help automated tasks handle numeric data flexibly and accurately.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                       | Description                                                                           |",
		"|-------------------------------|---------------------------------------------------------------------------------------|",
		"| Dynamic Expression Resolution | Calculate expressions on the fly within automation steps.                             |",
		"| Arithmetic Operations         | Support addition, subtraction, multiplication, division, exponentiation, and modulus. |",
		"| Input Sorting                 | Arrange numbers in ascending or descending order before computing.                    |",
		"| Rounding Precision            | Round results to a specified number of decimal places.                                |",
		"| Absolute Value Option         | Return the non-negative value of calculation results.                                 |",
		"| Pattern Extraction            | Apply a regex to extract parts of the result for further use.                         |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case                 | Description                                                  |",
		"|--------------------------|--------------------------------------------------------------|",
		"| Real-Time Calculations   | Perform on-the-fly arithmetic within RPA processes.          |",
		"| Dynamic Data Generation  | Compute values based on inputs that change during execution. |",
		"| Conditional Flow Control | Use computed results to drive decision points in workflows.  |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case                  | Description                                                |",
		"|---------------------------|------------------------------------------------------------|",
		"| Test Data Generation      | Generate numeric inputs for test scenarios dynamically.    |",
		"| Output Verification       | Validate expected numeric outcomes within automated tests. |",
		"| Parameterized Test Inputs | Create test cases with calculated parameter values.        |"
	],
	"examples": [
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression and send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                   |",
				"|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                          |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                            |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                       |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to calculate the subtraction of 10 from 2 and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:2 --Y:10 --Operation:-}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression and send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                   |",
				"|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                          |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                            |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                       |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to calculate the division of 10 by 2 and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:10 --Y:2 --Operation:/}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression and send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                   |",
				"|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                          |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                            |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                       |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to calculate the modulus of 10 divided by 3 and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:10 --Y:3 --Operation:%}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression and send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                   |",
				"|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                          |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                            |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                       |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to calculate the multiplication of 10 by 2 and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:10 --Y:2 --Operation:*}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression after sorting the input numbers in ascending order, and then send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                                                                      |",
				"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                             |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically after sorting the input numbers in ascending order. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                               |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                          |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to first sort the input numbers (10, 3) in ascending order, calculate the modulus of 3 divided by 10, and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:10 --Y:3 --Operation:% --Asc}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression after sorting the input numbers in descending order, and then send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                                                                       |",
				"|------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                              |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically after sorting the input numbers in descending order. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                           |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to first sort the input numbers (3, 10) in descending order, calculate the modulus of 10 divided by 3, and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:3 --Y:10 --Operation:% --Desc}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of raising a number to a power and send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                                                    |",
				"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                           |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically for raising 10 to the power of 2. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                             |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                        |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to raise 10 to the power of 2, and send the result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:10 --Y:2 --Operation:^}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression, round it to 2 decimal places, and send it as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                                                                                    |",
				"|------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                                           |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically for dividing 10 by 3 and rounding the result to 2 decimal places. The calculated result will be sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                             |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                                        |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to divide 10 by 3, round the result to 2 decimal places, and send the rounded result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:10 --Y:3 --Operation:/ --Round:2}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to dynamically calculate the result of a mathematical expression, subtracting 10 from 2, and then taking the absolute value of the result. The absolute value is then sent as keystrokes using the `SendKeys` plugin.",
				"",
				"| Field      | Description                                                                                                                                                                                                                         |",
				"|------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                                                |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically, subtracting 10 from 2, and then taking the absolute value of the result. The absolute value is then sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                                  |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                                             |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to subtract 10 from 2, take the absolute value of the result, and send the absolute value as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:2 --Y:10 --Operation:- --Abs}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of nested `ResolveMathExpression` plugins to dynamically calculate the result of a mathematical expression and use it as an input parameter for another expression. Here, we perform addition and then division.",
				"",
				"| Field      | Description                                                                                                                                                                                                                                                              |",
				"|------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                                                                                     |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to first calculate the result of adding 2 and 3, and then use the result as the `X` parameter for another `ResolveMathExpression` plugin to divide by 5. The final result of the division is sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                                                                       |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                                                                                  |",
				"",
				"This example instructs the automation system to utilize nested `ResolveMathExpression` plugins to first add 2 and 3, then divide the result by 5, and send the final result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:{{$Resolve-MathExpression --X:2 --Y:3 --Operation:+}} --Y:5 --Operation:/}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of nested `ResolveMathExpression` plugins to dynamically calculate the result of a mathematical expression and use it as an input parameter for another expression. Here, we perform subtraction and then multiplication.",
				"",
				"| Field      | Description                                                                                                                                                                                                                                                                             |",
				"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                                                                                                    |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to first calculate the result of subtracting 5 from 10, and then use the result as the `X` parameter for another `ResolveMathExpression` plugin to multiply by 3. The final result of the multiplication is sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                                                                                      |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                                                                                                 |",
				"",
				"This example instructs the automation system to utilize nested `ResolveMathExpression` plugins to first subtract 5 from 10, then multiply the result by 3, and send the final result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:{{$Resolve-MathExpression --X:10 --Y:5 --Operation:-}} --Y:3 --Operation:*}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of nested `ResolveMathExpression` plugins to dynamically calculate the result of a mathematical expression and use it as an input parameter for another expression. Here, we perform exponentiation and then modulus.",
				"",
				"| Field      | Description                                                                                                                                                                                                                                                                                                |",
				"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `SendKeys`. This signifies the action of sending keystrokes.                                                                                                                                                                                       |",
				"| argument   | Specifies the use of the `ResolveMathExpression` plugin to first calculate the result of raising 2 to the power of 3, and then use the result as the `X` parameter for another `ResolveMathExpression` plugin to find the modulus with 5. The final result of the modulus operation is sent as keystrokes. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                                                                                                         |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                                                                                                                    |",
				"",
				"This example instructs the automation system to utilize nested `ResolveMathExpression` plugins to first raise 2 to the power of 3, then find the modulus of the result with 5, and send the final result as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:{{$Resolve-MathExpression --X:2 --Y:3 --Operation:^}} --Y:5 --Operation:%}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"This example demonstrates the usage of the `ResolveMathExpression` plugin to calculate a mathematical expression dynamically, apply a regular expression pattern to extract the integer part of the result, and send the extracted information as keystrokes to a specific element on a web page.",
				"",
				"| Field      | Description                                                                                                                                                                                                                                                        |",
				"|------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
				"| pluginName | Identifies the specific plugin being utilized, which is `ResolveMathExpression`. This signifies the action of resolving a mathematical expression.                                                                                                                 |",
				"| argument   | Specifies the resolution of the mathematical expression '5.5 * 2.5' and the application of a regular expression pattern '\\d+' to extract the integer part of the result. For example, `{{$Resolve-MathExpression --X:5.5 --Y:2.5 --Operation:* --Pattern:\\d+}}`. |",
				"| onElement  | Specifies the target element on which the keystrokes will be sent, which is a hypothetical element identified by its CSS selector.                                                                                                                                 |",
				"| locator    | Specifies the locator type used to identify the target element, which is `CssSelector` in this example.                                                                                                                                                            |",
				"",
				"This example instructs the automation system to utilize the `ResolveMathExpression` plugin to resolve the mathematical expression '5.5 * 2.5', apply a regular expression pattern '\\d+' to extract the integer part of the result, and send the extracted information as keystrokes to the specified element identified by its CSS selector."
			],
			"rule": {
				"argument": "{{$Resolve-MathExpression --X:5.5 --Y:2.5 --Operation:* --Pattern:\\d+}}",
				"locator": "CssSelector",
				"onElement": ".result-field",
				"pluginName": "SendKeys"
			}
		}
	],
	"key": "Resolve-MathExpression",
	"manifestVersion": 4,
	"parameters": [
		{
			"description": [
				"Abs instructs the plugin to return the absolute value of the computed result.",
				"Using Abs ensures the output is always non-negative, regardless of the operation's outcome.",
				"This can be useful in workflows where only the magnitude of the result is relevant."
			],
			"mandatory": false,
			"name": "Abs",
			"type": "Switch"
		},
		{
			"description": [
				"Asc sorts the input numbers in ascending order before performing the calculation.",
				"Sorting inputs with Asc can change the outcome of operations sensitive to order, such as subtraction or division.",
				"Use Asc to guarantee numbers are always processed from smallest to largest."
			],
			"mandatory": false,
			"name": "Asc",
			"type": "Switch"
		},
		{
			"description": [
				"Desc sorts the input numbers in descending order before performing the calculation.",
				"With Desc, numbers are always processed from largest to smallest, which can impact operations where order matters.",
				"This is helpful for workflows that require prioritizing the largest values first."
			],
			"mandatory": false,
			"name": "Desc",
			"type": "Switch"
		},
		{
			"default": "+",
			"description": [
				"Operation specifies the type of mathematical operation to perform on the input numbers.",
				"Choosing an operation determines how X and Y will be combined in the calculation.",
				"Supported operations include addition, subtraction, multiplication, division, exponentiation, and modulus.",
				"Selecting the correct operation is essential for achieving the desired computational result."
			],
			"mandatory": false,
			"name": "Operation",
			"type": "String",
			"values": [
				{
					"description": [
						"Add combines X and Y to produce their sum.",
						"This operation is used when you want to calculate the total of two numbers."
					],
					"name": "+"
				},
				{
					"description": [
						"Subtract finds the difference between X and Y.",
						"Use this operation to determine how much one number exceeds or falls short of the other."
					],
					"name": "-"
				},
				{
					"description": [
						"Multiply computes the product of X and Y.",
						"Choose this to scale a number by another, such as calculating area or repeated addition."
					],
					"name": "*"
				},
				{
					"description": [
						"Divide finds how many times Y fits into X or the ratio of X to Y.",
						"This operation is used for distributing quantities or comparing proportions."
					],
					"name": "/"
				},
				{
					"description": [
						"Exponentiate raises X to the power of Y.",
						"Use this operation for exponential growth, scientific notation, or advanced calculations."
					],
					"name": "^"
				},
				{
					"description": [
						"Modulus returns the remainder when X is divided by Y.",
						"This operation is helpful for cyclic calculations or checking divisibility."
					],
					"name": "%"
				}
			]
		},
		{
			"description": [
				"Pattern provides a regular expression to apply to the result of the mathematical operation.",
				"This allows extraction of specific parts of the output for further processing.",
				"Using Pattern can help isolate or validate the numeric result according to custom rules."
			],
			"mandatory": false,
			"name": "Pattern",
			"type": "Regex"
		},
		{
			"description": [
				"Round sets how many decimal places the final result should be rounded to.",
				"Applying Round ensures the output has a consistent level of precision.",
				"This can make results easier to read or compare in subsequent automation steps."
			],
			"mandatory": false,
			"name": "Round",
			"type": "Number"
		},
		{
			"description": [
				"X is the first number used in the mathematical expression.",
				"It acts as the initial operand for operations like addition, subtraction, multiplication, division, exponentiation, and modulus.",
				"Specifying X is required to define the starting point for the calculation."
			],
			"mandatory": true,
			"name": "X",
			"type": "Number"
		},
		{
			"description": [
				"Y is the second number used in the mathematical expression.",
				"It serves as the next operand for operations such as addition, subtraction, multiplication, division, exponentiation, and modulus.",
				"Supplying Y is essential for completing two-operand calculations."
			],
			"mandatory": true,
			"name": "Y",
			"type": "Number"
		}
	],
	"platforms": [
		"Any"
	],
	"pluginType": "Macro",
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"summary": [
		"The ResolveMathExpression plugin lets automation workflows solve math expressions using input values, supporting operations like addition, subtraction, multiplication, division, exponentiation, and modulus.",
		"It allows sorting numbers, rounding results, and extracting parts of the output with a pattern.",
		"This helps automate complex calculations in RPA or testing scenarios, making workflows more flexible and accurate."
	]
}
