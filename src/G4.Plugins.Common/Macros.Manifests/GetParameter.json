{
	"aliases": [
		"getparam",
		"GetParameter"
	],
	"author": {
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/",
		"name": "Roei Sabag"
	},
	"categories": [
		"DataManagement"
	],
	"description": [
		"### Purpose",
		"",
		"The `GetParameter` plugin retrieves parameter values from designated storage scopes within controlled environments. ",
		"It supports rapid access to configuration data, real-time substitution of dynamic values, and decoding of encoded parameters. ",
		"Additionally, it can decrypt secure values using a provided EncryptionKey when the parameter was encrypted by the RegisterParameter plugin. ",
		"This capability is essential for maintaining secure and efficient automation workflows in diverse deployment scenarios.",
		"",
		"### Key Features",
		"",
		"| Feature                                  | Description                                                                                                                                                                                                                                          |",
		"|------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
		"| Environment Parameter Retrieval          | Extracts parameter values from specified scopes (Application, User, Machine, Process, Session) while supporting multi-environment setups. This ensures accurate retrieval even in complex, dynamically changing runtime conditions.                  |",
		"| Dynamic Value Injection                  | Integrates with automation workflows by replacing placeholders with live parameter values in real-time, supporting both synchronous and asynchronous execution paths to maintain workflow continuity.                                                |",
		"| Encoding Support                         | Implements robust base64 encoding and decoding processes to maintain data integrity and compatibility across various systems and communication channels.                                                                                             |",
		"| Environment-Specific Parameter Retrieval | Leverages explicit environment identifiers (e.g., test, prod) to target distinct parameter repositories, defaulting to 'SystemParameters' when not specified, thus ensuring that the correct configuration data is isolated and retrieved as needed. |",
		"| Encryption Support                       | Uses a provided EncryptionKey to decrypt parameter values that were encrypted by the RegisterParameter plugin, ensuring that sensitive data remains secure while being accessible for authorized automation tasks.                                   |",
		"",
		"### Usages in RPA",
		"",
		"| Usage                           | Description                                                                                                                                                                                     |",
		"|---------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
		"| Task Orchestration              | Retrieves critical configuration parameters to coordinate multi-stage automation tasks, ensuring that each workflow step is executed with the correct runtime data.                             |",
		"| Environment-Specific Automation | Adapts automation bots to operate across multiple environments by dynamically sourcing parameters specific to each context, thereby enhancing consistency and reliability in process execution. |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Usage                           | Description                                                                                                                                                                     |",
		"|---------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
		"| Data-Driven Testing             | Dynamically retrieves test data parameters to support a data-driven testing approach, allowing test scenarios to be generated and adjusted based on current parameter values.   |",
		"| Configuration Management        | Extracts and integrates runtime configuration parameters, enabling testing frameworks to automatically adjust to evolving conditions, thus ensuring robustness and scalability. |",
		"| Environment-Based Customization | Retrieves environment-specific parameters to tailor test cases, providing precise control over test execution and improving overall test coverage.                              |"
	],
	"examples": [
		{
			"description": [
				"Retrieve 'AppVersion' from SystemParameters in Application scope; use SendKeys to target #appVersionInput."
			],
			"rule": {
				"argument": "{{$Get-Parameter --Name:AppVersion --Scope:Application --Environment:SystemParameters}}",
				"locator": "CssSelector",
				"onElement": "#appVersionInput",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Retrieve 'AppVersion' from default SystemParameters in Application scope; use SendKeys to target #appVersionInput."
			],
			"rule": {
				"argument": "{{$Get-Parameter --Name:AppVersion --Scope:Application}}",
				"locator": "CssSelector",
				"onElement": "#appVersionInput",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Retrieve 'Email' from User scope; use SendKeys to target #emailInput."
			],
			"rule": {
				"argument": "{{$Get-Parameter --Name:Email --Scope:User}}",
				"locator": "CssSelector",
				"onElement": "#emailInput",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Retrieve 'MachineName' from Machine scope; use SendKeys to target #machineNameInput."
			],
			"rule": {
				"argument": "{{$Get-Parameter --Name:MachineName --Scope:Machine}}",
				"locator": "CssSelector",
				"onElement": "#machineNameInput",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Retrieve 'ProcessId' from Process scope; use SendKeys to target #processIdInput."
			],
			"rule": {
				"argument": "{{$Get-Parameter --Name:ProcessId --Scope:Process}}",
				"locator": "CssSelector",
				"onElement": "#processIdInput",
				"pluginName": "SendKeys"
			}
		},
		{
			"description": [
				"Retrieve 'SecretParam' from SystemParameters in Application scope using EncryptionKey for decryption; use SendKeys to target #secretInput."
			],
			"rule": {
				"argument": "{{$Get-Parameter --Name:SecretParam --Scope:Application --Environment:SystemParameters --EncryptionKey:myEncryptionKey}}",
				"locator": "CssSelector",
				"onElement": "#secretInput",
				"pluginName": "SendKeys"
			}
		}
	],
	"key": "Get-Parameter",
	"manifestVersion": 4,
	"parameters": [
		{
			"description": [
				"Identifies the parameter whose value you want to fetch.",
				"Accurate naming ensures the plugin locates the correct stored value."
			],
			"mandatory": true,
			"name": "Name",
			"type": "String"
		},
		{
			"default": "Session",
			"description": [
				"Indicates the storage scope to search for the parameter.",
				"Accepts 'Application', 'User', 'Machine', 'Process', or 'Session'.",
				"Omit this property to fall back to the 'Session' scope."
			],
			"mandatory": false,
			"name": "Scope",
			"type": "GetParameter"
		},
		{
			"description": [
				"Designates the environment collection that holds the parameter.",
				"Defaults to 'SystemParameters' when the property is not supplied."
			],
			"mandatory": false,
			"name": "Environment",
			"type": "String"
		},
		{
			"description": [
				"Provides the symmetric key used to decrypt secure parameter values.",
				"Include this key only when the value was encrypted by the RegisterParameter plugin."
			],
			"mandatory": false,
			"name": "EncryptionKey",
			"type": "String"
		}
	],
	"platforms": [
		"Any"
	],
	"pluginType": "Macro",
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"summary": [
		"The GetParameter plugin fetches a named parameter from application, user, machine, process, or session scopes in any environment.",
		"It swaps placeholders with the live value during execution, letting automation steps adjust instantly to current settings.",
		"The plugin also decodes base64 and, with an EncryptionKey, decrypts secrets saved by RegisterParameter, keeping sensitive data secure yet usable."
	]
}
