{
	"author": {
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/",
		"name": "Roei Sabag"
	},
	"categories": [
		"DataManagement"
	],
	"context": {
		"integration": {
			"github": {
				"document": "https://github.com/g4-api/g4-plugins/blob/main/docs/GetParameters/Machine.md",
				"source": "https://github.com/g4-api/g4-plugins/blob/main/src/G4.Plugins.Common/GetParameter/GetMachineParameter.cs"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"This plugin lets automation workflows retrieve system-wide settings defined on Windows computers. It reads environment variables defined for every user under the machine scope in the Windows registry. By pulling shared values like paths or feature flags, workflows can run with the correct setup without extra steps.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                | Description                                                           |",
		"|------------------------|-----------------------------------------------------------------------|",
		"| Global variable access | Reads values defined for all users on the Windows machine.            |",
		"| Empty value handling   | Returns an empty string when the variable is missing or has no value. |",
		"| Result output field    | Makes the fetched value available for use in later workflow steps.    |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case                     | Description                                                                               |",
		"|------------------------------|-------------------------------------------------------------------------------------------|",
		"| Global configuration loading | Loads shared Windows settings like paths or service URLs so workflows match system setup. |",
		"| Live value retrieval         | Gets the latest Windows environment values at runtime for up-to-date workflow behavior.   |",
		"| System health checks         | Reads global settings to verify required variables are set and correct.                   |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case                 | Description                                                                                 |",
		"|--------------------------|---------------------------------------------------------------------------------------------|",
		"| Test setup configuration | Configures test runs using Windows system-wide settings like API addresses and credentials. |",
		"| Data-driven tests        | Uses Windows environment values to run tests with different inputs automatically.           |",
		"| Pre-run checks           | Verifies required Windows variables exist before starting tests to avoid failures.          |"
	],
	"entity": [
		{
			"description": [
				"Holds the string value returned from the machine-level environment variable retrieved by the plugin.",
				"If the variable is not defined or has no value, it will be an empty string, allowing downstream steps to detect and handle missing machine parameters."
			],
			"mandatory": true,
			"name": "Parameter",
			"type": "Any"
		}
	],
	"examples": [
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Access denied to machine environment",
						"Empty or null value returned",
						"Parameter not found"
					],
					"expected_result": "The value of the `MyMachineParam` environment variable is retrieved and made available in the `Result` output field for downstream actions.",
					"notes": "Retrieves the raw string value of `MyMachineParam` from the machine scope. If the parameter is missing or returns an empty value, downstream actions must handle the null or empty case explicitly.",
					"use_case": "parameter_retrieval_machine_environment",
					"version": "1.0"
				},
				"labels": [
					"Action",
					"EnvironmentAccess",
					"ParameterRetrieval"
				]
			},
			"description": [
				"### Retrieve Machine-Level Environment Variable",
				"",
				"This example demonstrates how to retrieve a machine-level environment variable named `MyMachineParam` using the Machine plugin’s GetParameter action.",
				"It returns the raw value of the `MyMachineParam` variable from the machine scope for use in downstream workflows.",
				"The retrieved value is available in the `Result` output field for subsequent steps."
			],
			"rule": {
				"$type": "Action",
				"onElement": "MyMachineParam",
				"pluginName": "Machine"
			}
		}
	],
	"key": "Machine",
	"manifestVersion": 4,
	"platforms": [
		"Windows"
	],
	"pluginType": "GetParameter",
	"properties": [
		{
			"description": [
				"OnElement names the environment variable to retrieve.",
				"Workflows use this name to find the right value when they run."
			],
			"mandatory": true,
			"name": "OnElement",
			"type": "String"
		}
	],
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"summary": [
		"The GetMachineParameter plugin gets shared settings from the computer, like folder paths or feature switches.",
		"If a setting is missing, it gives back nothing so workflows know it’s not set.",
		"It makes the setting available for later steps to use in the process.",
		"Workflows and tests can use it to set up or check settings before they run."
	]
}
