{
	"aliases": [
		"Eq"
	],
	"author": {
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/",
		"name": "Roei Sabag"
	},
	"categories": [
		"Operators"
	],
	"context": {
		"integration": {
			"github": {
				"document": "https://github.com/g4-api/g4-plugins/blob/main/docs/Operators/Equal.md",
				"source": "https://github.com/g4-api/g4-plugins/blob/main/src/G4.Plugins.Common/Operators/EqualOperator.cs"
			}
		}
	},
	"description": [
		"### Disclaimer",
		"",
		"Operator plugins are designed to be called and used only by other plugins that expose an Operator parameter (such as Assert, SetCondition, or InvokeWhileLoop).",
		"They cannot be invoked directly in the workflow; they function only when implemented inside a caller plugin.",
		"",
		"### Purpose",
		"",
		"The EqualOperator plugin compares two strings to determine if they are exactly equal.",
		"It uses case-sensitive comparison to ensure precise matching.",
		"It returns a Boolean result that can be used in automation workflows and tests to control the flow based on string equality.",
		"This capability is essential for building reliable conditional logic.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                   | Description                                                                                        |",
		"|---------------------------|----------------------------------------------------------------------------------------------------|",
		"| Case-Sensitive Comparison | Performs a case-sensitive comparison of two strings to check for exact equality.                   |",
		"| Integration               | Can be used within conditional expressions by other plugins to enable flexible workflow decisions. |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case          | Description                                                                           |",
		"|-------------------|---------------------------------------------------------------------------------------|",
		"| String Comparison | Validate that two string values are exactly the same to guide workflow steps.         |",
		"| Conditional Logic | Use the comparison result to control the flow of automation based on string equality. |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case           | Description                                                                          |",
		"|--------------------|--------------------------------------------------------------------------------------|",
		"| Validation         | Compare expected and actual string values to assert correctness in tests.            |",
		"| Dynamic Conditions | Create test conditions based on string comparisons for more flexible test scenarios. |"
	],
	"examples": [
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Empty input strings",
						"Special characters in strings",
						"Strings differing only in case",
						"Whitespace differences"
					],
					"expected_result": "Determines if 'ActualResult' and 'ExpectedValue' are exactly equal (case-sensitive).",
					"notes": "Comparison is case-sensitive and evaluates equality directly. This plugin cannot be used standalone and must be implemented inside a caller plugin such as Assert, SetCondition, or InvokeWhileLoop.",
					"use_case": "compare_strings_for_exact_equality",
					"version": "1.0.0"
				},
				"labels": [
					"EqualityCheck",
					"Operator",
					"StringComparison"
				]
			},
			"description": [
				"### String Equality Comparison",
				"",
				"Uses the `Equal` plugin to determine if two strings are exactly equal, such as comparing an actual result with an expected value.",
				"The plugin checks if the values of 'LeftHand' and 'RightHand' match, using a case-sensitive comparison. This comparison is valid only when used inside a caller plugin that supports operator logic."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --LeftHand:ActualResult --RightHand:ExpectedValue}}",
				"pluginName": "Equal"
			}
		}
	],
	"key": "Equal",
	"manifestVersion": 4,
	"parameters": [
		{
			"description": [
				"Specifies the first input string to be used in the comparison.",
				"This value is compared to another string to determine equality.",
				"Used on the left side of the equality check.",
				"Both strings must match exactly for the result to be true."
			],
			"mandatory": true,
			"name": "LeftHand",
			"type": "String"
		},
		{
			"description": [
				"Specifies the second input string for comparison.",
				"This string is checked against the left-hand value for equality.",
				"Used on the right side of the equality check.",
				"The comparison is case-sensitive and expects an exact match."
			],
			"mandatory": true,
			"name": "RightHand",
			"type": "String"
		}
	],
	"platforms": [
		"Any"
	],
	"pluginType": "Operator",
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"summary": [
		"The EqualOperator plugin compares two strings exactly using case-sensitive matching.",
		"It returns a Boolean result to drive conditional logic in automation workflows and tests.",
		"It integrates seamlessly with other operators to enable precise and reliable workflow decisions."
	]
}
