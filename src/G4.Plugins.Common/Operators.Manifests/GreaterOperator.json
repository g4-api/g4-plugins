{
	"aliases": [
		"Gt"
	],
	"author": {
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/",
		"name": "Roei Sabag"
	},
	"categories": [
		"Operators"
	],
	"description": [
		"### Purpose",
		"",
		"The GreaterOperator plugin lets you compare two numbers to see if one is larger than another.",
		"This simple comparison is useful in automated workflows and tests to guide decision points.",
		"It ensures that workflow steps only run when the right numerical conditions are met.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature              | Description                                                                                          |",
		"|----------------------|------------------------------------------------------------------------------------------------------|",
		"| Numerical Comparison | Performs a numerical comparison of two numeric values to determine if one is greater than the other. |",
		"| Integration          | Can be used within other plugins as a conditional operator in workflows.                             |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case           | Description                                                    |",
		"|--------------------|----------------------------------------------------------------|",
		"| Numeric Comparison | Stop or continue a process based on numeric thresholds.        |",
		"| Conditional Logic  | Choose different workflow paths when values exceed set limits. |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case           | Description                                                                   |",
		"|--------------------|-------------------------------------------------------------------------------|",
		"| Validation         | Confirm that test outputs exceed expected numeric benchmarks.                 |",
		"| Dynamic Conditions | Adapt test steps dynamically when numeric conditions change during execution. |"
	],
	"examples": [
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Invalid numeric arguments",
						"LeftHand less than RightHand",
						"Missing arguments",
						"Non-numeric inputs"
					],
					"expected_result": "Return true when LeftHand is greater than RightHand; otherwise, return false.",
					"notes": "Uses the argument macro `{{$ --LeftHand:<value> --RightHand:<value>}}`.",
					"use_case": "greater_plugin_positive_comparison",
					"version": "1.0.0"
				},
				"labels": [
					"Comparison",
					"NumericComparison",
					"Operator"
				]
			},
			"description": [
				"### Positive Greater Plugin Comparison",
				"",
				"The Greater plugin uses `{{$ --LeftHand:10 --RightHand:5}}` to compare two values at runtime and returns true because 10 is greater than 5."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --LeftHand:10 --RightHand:5}}",
				"pluginName": "Greater"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Equal values",
						"Invalid numeric arguments",
						"LeftHand less than RightHand",
						"Missing arguments",
						"Non-numeric inputs"
					],
					"expected_result": "Return true when LeftHand is greater than RightHand; otherwise, return false.",
					"notes": "Uses the argument macro `{{$ --LeftHand:<value> --RightHand:<value>}}`.",
					"use_case": "greater_plugin_equal_comparison",
					"version": "1.0.0"
				},
				"labels": [
					"Comparison",
					"NumericComparison",
					"Operator"
				]
			},
			"description": [
				"### Equal Greater Plugin Comparison",
				"",
				"The Greater plugin uses `{{$ --LeftHand:5 --RightHand:5}}` to compare two values at runtime and returns false because both values are equal."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --LeftHand:5 --RightHand:5}}",
				"pluginName": "Greater"
			}
		}
	],
	"key": "Greater",
	"manifestVersion": 4,
	"parameters": [
		{
			"description": [
				"LeftHand is the first numeric value in a greater than check.",
				"It defines the baseline value that the second number is compared against.",
				"Supplying an accurate LeftHand value ensures the comparison yields correct results."
			],
			"mandatory": true,
			"name": "LeftHand",
			"type": "Number"
		},
		{
			"description": [
				"RightHand is the second numeric value in a greater than check.",
				"It represents the threshold that the first number must exceed.",
				"Providing a precise RightHand value ensures the comparison works as intended."
			],
			"mandatory": true,
			"name": "RightHand",
			"type": "Number"
		}
	],
	"platforms": [
		"Any"
	],
	"pluginType": "Operator",
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"summary": [
		"The GreaterOperator plugin compares two numeric values and returns true if the first value is strictly greater than the second.",
		"It outputs a true or false result that controls conditional branches in automation workflows and tests.",
		"This lets automation scripts make dynamic decisions based on numeric comparisons and integrate with other actions."
	]
}
