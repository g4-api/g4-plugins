{
	"author": {
		"name": "Roei Sabag",
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/"
	},
	"categories": [
		"Http"
	],
	"context": {
		"integration": {
			"github": {
				"document": "https://github.com/g4-api/g4-plugins/blob/main/docs/HttpMethods/Delete.md",
				"source": "https://github.com/g4-api/g4-plugins/blob/main/src/G4.Plugins.Common/HttpMethods/HttpDeleteMethod.cs"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"The Delete plugin lets automation workflows remove data from servers or APIs by sending HTTP DELETE requests.",
		"It follows the standard HTTP protocol to request the removal of specified resources on a server.",
		"This plugin simplifies programmatic data deletion and ensures consistency in automation processes.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                    | Description                                                              |",
		"|----------------------------|--------------------------------------------------------------------------|",
		"| Data Deletion              | Sends HTTP DELETE requests to remove data from servers or APIs.          |",
		"| Dynamic Requests           | Supports dynamic URL construction and payload handling.                  |",
		"| Custom Headers             | Allows inclusion of custom headers in the request.                       |",
		"| Content Types and Encoding | Supports various content types and encoding methods for payloads.        |",
		"| Response Handling          | Captures HTTP response, headers, and status code for further processing. |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case            | Description                                                                                                                |",
		"|---------------------|----------------------------------------------------------------------------------------------------------------------------|",
		"| Data Management     | Remove outdated or unnecessary data from external systems or APIs, such as outdated customer records or redundant entries. |",
		"| Workflow Adjustments| Dynamically adjust subsequent workflow actions based on deletion requirements.                                             |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case                         | Description                                                                                                                                      |",
		"|----------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------|",
		"| API Cleanup in Testing           | Use DELETE requests in automated tests to clean up data created during test execution, ensuring a controlled environment for each test run.      |",
		"| Data Integrity Checks            | Combine deletion requests with validation steps to confirm that specified data has been accurately removed, ensuring system consistency.         |",
		"| Regression Testing for Deletion  | Verify that deletion functionality remains intact after system updates or changes by replaying delete requests and confirming expected outcomes. |"
	],
	"examples": [
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Invalid URL format",
						"Missing argument",
						"Network failure",
						"Resource not found (404)",
						"Server error (5xx)",
						"Timeout",
						"Unauthorized access (401)",
						"Unexpected HTTP status codes or malformed responses"
					],
					"expected_result": "The plugin deletes the resource at the specified URL and returns the HTTP response.",
					"notes": "The `argument` field specifies the target URL for the DELETE request. The plugin performs a standard HTTP DELETE method and exposes the response for further processing.",
					"use_case": "delete_resource_by_url",
					"version": "1.0"
				},
				"labels": [
					"API",
					"Delete",
					"HTTPRequest",
					"ResourceDeletion"
				]
			},
			"description": [
				"### Simple DELETE request",
				"",
				"Use the `Delete` plugin to send an HTTP DELETE request to a specific URL.",
				"Delete the resource at that URL and capture the response."
			],
			"rule": {
				"$type": "Action",
				"argument": "http://localhost:9002/api/hotels/delete/12345",
				"pluginName": "Delete"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Duplicate header names",
						"Invalid header format",
						"Invalid URL format",
						"Missing argument",
						"Network failure",
						"Resource not found (404)",
						"Server error (5xx)",
						"Timeout",
						"Unauthorized access (401)",
						"Unexpected HTTP status codes or malformed responses"
					],
					"expected_result": "The plugin sends an HTTP DELETE request with the specified headers and returns the response.",
					"notes": "The `argument` uses `--Url` to set the target URL and multiple `--Header` flags to include custom headers in the request.",
					"use_case": "delete_resource_with_headers",
					"version": "1.0"
				},
				"labels": [
					"API",
					"Delete",
					"Headers",
					"HTTPRequest",
					"ResourceDeletion"
				]
			},
			"description": [
				"### DELETE request with custom headers",
				"",
				"Use the `Delete` plugin to send an HTTP DELETE request to a specific URL with custom headers.",
				"Delete the resource at that URL and capture the response."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete/12345 --Header:Authorization=Bearer token123 --Header:Custom-Header=CustomValue}}",
				"pluginName": "Delete"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Body too large",
						"Duplicate header names",
						"Invalid JSON body",
						"Invalid URL format",
						"Missing argument",
						"Missing body",
						"Network failure",
						"Resource not found (404)",
						"Server error (5xx)",
						"Timeout",
						"Unauthorized access (401)",
						"Unexpected HTTP status codes or malformed responses",
						"Unsupported content type"
					],
					"expected_result": "The plugin sends an HTTP DELETE request with the given JSON body and Content-Type header, then returns the response.",
					"notes": "The `argument` uses `--Url` to set the target URL, `--Body` to provide a JSON payload, and `--ContentType` to specify the request's Content-Type header.",
					"use_case": "delete_resource_with_body",
					"version": "1.0"
				},
				"labels": [
					"API",
					"Body",
					"ContentType",
					"Delete",
					"HTTPRequest",
					"ResourceDeletion"
				]
			},
			"description": [
				"### DELETE request with JSON body and content type",
				"",
				"Send an HTTP DELETE request to the specified URL with a JSON payload in the request body and the appropriate Content-Type header.",
				"Return the response from the server."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete --Body:{\"id\":12345} --ContentType:application/json}}",
				"pluginName": "Delete"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Encoding mismatch",
						"Invalid URL format",
						"Missing argument",
						"Network failure",
						"Resource not found (404)",
						"Server error (5xx)",
						"Timeout",
						"Unauthorized access (401)",
						"Unexpected HTTP status codes or malformed responses",
						"Unsupported encoding"
					],
					"expected_result": "The plugin sends an HTTP DELETE request to the specified URL using the specified encoding and returns the HTTP response.",
					"notes": "The `argument` uses `--Url` to set the target URL and `--Encoding` to specify the request encoding.",
					"use_case": "delete_resource_with_encoding",
					"version": "1.0"
				},
				"labels": [
					"API",
					"Delete",
					"Encoding",
					"HTTPRequest",
					"ResourceDeletion"
				]
			},
			"description": [
				"### DELETE request with specified encoding",
				"",
				"Send an HTTP DELETE request to the specified URL using the given encoding for the request.",
				"Return the response from the server."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete/12345 --Encoding:UTF8}}",
				"pluginName": "Delete"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Duplicate field names",
						"Invalid field format",
						"Invalid form encoding",
						"Invalid URL format",
						"Missing argument",
						"Missing field values",
						"Network failure",
						"Payload ignored by server",
						"Resource not found (404)",
						"Server error (5xx)",
						"Timeout",
						"Unauthorized access (401)",
						"Unexpected HTTP status codes or malformed responses",
						"Unsupported form field name"
					],
					"expected_result": "The plugin sends an HTTP DELETE request with the specified form fields and returns the HTTP response.",
					"notes": "The `argument` uses `--Url` to set the target URL and `--Field` to include form fields in the request. If no `--ContentType` flag is provided, the plugin defaults to `application/json`. Some servers may ignore or reject bodies in DELETE requests.",
					"use_case": "delete_resource_with_form_fields",
					"version": "1.0"
				},
				"labels": [
					"API",
					"Delete",
					"FormFields",
					"HTTPRequest",
					"ResourceDeletion"
				]
			},
			"description": [
				"### DELETE request with form fields",
				"",
				"Send an HTTP DELETE request to the specified URL with form fields.",
				"If no `--ContentType` flag is provided, the request defaults to `application/json`.",
				"Return the response from the server."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete --Field:id=12345}}",
				"pluginName": "Delete"
			}
		},









		{
			"description": [
				"Use the `Delete` plugin to send an HTTP DELETE request and extract a specific attribute from the response."
			],
			"rule": {
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete/12345}}",
				"onAttribute": "status",
				"onElement": "//response",
				"pluginName": "Delete"
			}
		},





		{
			"description": [
				"Use the `Delete` plugin to send an HTTP DELETE request and target elements using XPath."
			],
			"rule": {
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete/12345}}",
				"onElement": "//response/status",
				"pluginName": "Delete"
			}
		},
		{
			"description": [
				"Use the `Delete` plugin to send an HTTP DELETE request and apply a regular expression to extract specific data from the response."
			],
			"rule": {
				"argument": "{{$ --Url:http://localhost:9002/api/hotels/delete/12345}}",
				"pluginName": "Delete",
				"regularExpression": "\\d{3}"
			}
		}
	],
	"key": "Delete",
	"manifestVersion": 4,
	"outputParameters": [
		{
			"description": [
				"Holds the content returned from an HTTP request after any specified extraction or processing rules have been applied.",
				"Provides a way to work with the processed response data instead of the raw body.",
				"Enables automation workflows to access the exact information they need from the HTTP response."
			],
			"name": "HttpResponse",
			"type": "Any"
		},
		{
			"description": [
				"Holds the HTTP response headers returned from an HTTP request.",
				"Contains key-value pairs that provide metadata about the response such as content type, date, and length.",
				"Enables workflows to inspect response details for logging or conditional logic."
			],
			"name": "HttpResponseHeaders",
			"type": "Any"
		},
		{
			"description": [
				"Holds the HTTP status code returned from an HTTP request.",
				"Represents the outcome of the request using a three-digit numeric code.",
				"Enables automation flows to check for success or failure of the HTTP operation.",
				"Supports error handling in workflows based on the status code value."
			],
			"name": "HttpStatusCode",
			"type": "Any"
		}
	],
	"parameters": [
		{
			"description": [
				"Defines the data payload sent with a DELETE request.",
				"Includes extra details the server may need to carry out the deletion.",
				"Helps ensure the API has the context required to process the delete operation."
			],
			"mandatory": false,
			"name": "Body",
			"type": "String"
		},
		{
			"description": [
				"Indicates the format of data sent in the request body.",
				"Helps the server understand how to parse and handle the payload.",
				"Supports formats such as JSON, XML, form data, and plain text."
			],
			"mandatory": false,
			"name": "ContentType",
			"type": "String",
			"values": [
				{
					"description": [
						"Represents JSON data encoded as JavaScript Object Notation.",
						"Allows for structured data that is easy to read and parse."
					],
					"name": "application/json"
				},
				{
					"description": [
						"Denotes a generic binary data stream when the format is unknown.",
						"Enables transferring files or data without predefined structure."
					],
					"name": "application/octet-stream"
				},
				{
					"description": [
						"Identifies Portable Document Format files for documents and forms.",
						"Ensures consistent rendering of printable content."
					],
					"name": "application/pdf"
				},
				{
					"description": [
						"Marks XML data formatted with Extensible Markup Language.",
						"Provides a generic way to represent structured data."
					],
					"name": "application/xml"
				},
				{
					"description": [
						"Specifies MPEG audio encoded in MP3 format.",
						"Offers compressed audio suitable for music and podcasts."
					],
					"name": "audio/mpeg"
				},
				{
					"description": [
						"Indicates JPEG images compressed for photographs.",
						"Balances image quality with file size."
					],
					"name": "image/jpeg"
				},
				{
					"description": [
						"Signals PNG images with lossless compression.",
						"Supports transparent backgrounds for web graphics."
					],
					"name": "image/png"
				},
				{
					"description": [
						"Used for form submissions that include files and text fields.",
						"Allows combining different data types in one request."
					],
					"name": "multipart/form-data"
				},
				{
					"description": [
						"Defines stylesheet content for web page styling in CSS.",
						"Controls layout, colors, and fonts of HTML documents."
					],
					"name": "text/css"
				},
				{
					"description": [
						"Represents HTML content to structure web pages.",
						"Defines elements like headings, paragraphs, and links."
					],
					"name": "text/html"
				},
				{
					"description": [
						"Denotes plain text without special formatting.",
						"Serves simple messages or logs in text form."
					],
					"name": "text/plain"
				},
				{
					"description": [
						"Encodes URL-encoded form data in key-value pairs.",
						"Pairs are separated by ampersands and percent-encoded if needed."
					],
					"name": "application/x-www-form-urlencoded"
				},
				{
					"description": [
						"Specifies MP4 multimedia container for video and audio.",
						"Supports subtitles and still images within the file."
					],
					"name": "video/mp4"
				}
			]
		},
		{
			"description": [
				"Explains how text characters are converted to binary code for transmission.",
				"Ensures the data is encoded and decoded correctly by both sender and receiver.",
				"Allows different encoding standards to maintain compatibility across systems."
			],
			"name": "Encoding",
			"type": "String",
			"values": [
				{
					"description": [
						"Uses 7-bit codes to represent 128 common characters such as letters, digits, and symbols.",
						"Forms the basis for many modern text encoding systems.",
						"Remains compatible with Unicode formats like UTF-8."
					],
					"name": "ASCII"
				},
				{
					"description": [
						"Stores each character in 16 bits with the most significant byte first.",
						"Commonly used on platforms that follow big-endian byte ordering.",
						"Ensures consistent decoding when big-endian formats are required."
					],
					"name": "BigEndianUnicode"
				},
				{
					"description": [
						"Also called ISO-8859-1 and covers many Western European languages.",
						"Uses one byte per character for a total of 256 symbols.",
						"Often used for legacy data but supports fewer characters than Unicode."
					],
					"name": "Latin1"
				},
				{
					"description": [
						"Assigns a unique code point to every character in most writing systems.",
						"Supports global text representation in a single standard.",
						"Forms the foundation for encodings like UTF-8 and UTF-16."
					],
					"name": "Unicode"
				},
				{
					"description": [
						"Encodes text using only 7-bit ASCII characters for safe transmission in restricted systems.",
						"Was originally designed for email use where 8-bit data could be problematic.",
						"Rarely used today because it is less efficient than modern encodings."
					],
					"name": "UTF7"
				},
				{
					"description": [
						"Variable-length encoding that uses one to four bytes per character.",
						"Covers all Unicode code points and is backward-compatible with ASCII.",
						"Widely adopted as the standard text format on the web."
					],
					"name": "UTF8"
				},
				{
					"description": [
						"Uses a fixed four bytes for each character’s code point.",
						"Simplifies text processing by providing a constant width per character.",
						"Consumes more memory but offers straightforward character indexing."
					],
					"name": "UTF32"
				}
			]
		},
		{
			"description": [
				"Defines a form field to include in the request body using key=value pairs.",
				"Encodes each field correctly so the server can read the data.",
				"Lets you send extra parameters when the server requires them during a delete operation."
			],
			"mandatory": false,
			"name": "Field",
			"type": "KeyValue"
		},
		{
			"description": [
				"Enables adding custom headers to an HTTP DELETE request.",
				"Each header uses a name=value format so the server can read it correctly.",
				"Allows you to repeat the parameter to include multiple headers.",
				"Custom headers let you send extra information like authentication tokens or tracing data."
			],
			"mandatory": false,
			"name": "Header",
			"type": "KeyValue"
		},
		{
			"description": [
				"Defines the web address where the delete request is sent.",
				"Tells the server which resource should be removed.",
				"Ensures the correct endpoint is targeted for deletion.",
				"Using an accurate URL helps prevent errors or deleting the wrong resource."
			],
			"mandatory": false,
			"name": "Url",
			"type": "String"
		}
	],
	"platforms": [
		"Any"
	],
	"pluginType": "HttpMethod",
	"properties": [
		{
			"description": [
				"Specifies where to send the HTTP DELETE request and what data to include.",
				"Allows dynamic values through templates or variable placeholders in the format {{$...}}.",
				"Makes it possible to customize the request URL or payload at runtime."
			],
			"mandatory": true,
			"name": "Argument",
			"type": "Uri|Expression"
		},
		{
			"description": [
				"Targets specific parts of an API response by using XPath or JSONPath expressions.",
				"Works with both XML and JSON responses.",
				"Adapts to the response format to locate the right element.",
				"Helps ensure the correct data is extracted regardless of the API’s output format."
			],
			"mandatory": false,
			"name": "OnElement",
			"type": "String"
		},
		{
			"description": [
				"Defines a pattern for capturing and extracting specific data from a text response.",
				"Uses standard regular expression syntax to match and retrieve the parts you need.",
				"Enables precise extraction of values embedded in the response.",
				"Helps automate parsing of complex text outputs."
			],
			"mandatory": false,
			"name": "RegularExpression",
			"type": "Regex"
		}
	],
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"summary": [
		"The Delete plugin removes data from servers by sending delete requests.",
		"It lets you choose where to send the request and what information to include.",
		"It helps keep systems tidy by removing old or unwanted information.",
		"It can also check that data removal works correctly during testing."
	]
}
