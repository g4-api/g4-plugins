{
	"aliases": [
		"SetSwitchCase"
	],
	"author": {
		"name": "Roei Sabag",
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/"
	},
	"categories": [
		"FlowControl"
	],
	"context": {
		"integration": {
			"sequentialWorkflow": {
				"$type": "Action",
				"componentType": "task",
				"iconProvider": "task",
				"model": "ActionRuleModel"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"The SetSwitchCase plugin checks a key from a rule argument or an element’s text or attribute and then runs steps under the matching branch. If no branch matches, it uses the Default branch. It can ignore letter case and use a regular expression to extract the key. This helps automate workflows that need to follow different paths based on data.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                 | Description                                                                         |",
		"|-------------------------|-------------------------------------------------------------------------------------|",
		"| Key Source              | Use a fixed value from the rule or get the key from an element’s text or attribute. |",
		"| Regular Expression Key  | Use a regex to pull out the exact key from element content.                         |",
		"| Case-Insensitive Match  | Find a matching branch without considering uppercase or lowercase letters.          |",
		"| Default Branch Fallback | Run tasks under the Default branch if no case matches.                              |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case               | Description                                                                         |",
		"|------------------------|-------------------------------------------------------------------------------------|",
		"| Data-Driven Branching  | Send the workflow down different paths based on a value from a page or config file. |",
		"| Conditional Workflow   | Follow different steps depending on data seen during automation.                    |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case             | Description                                                          |",
		"|----------------------|----------------------------------------------------------------------|",
		"| Scenario-Based Tests | Run different checks based on a value taken from the app under test. |",
		"| Fallback Verification| Use a default test path if no specific case matches.                 |"
	],
	"examples": [
		{
			"rule": {
				"pluginName": "RegisterParameter",
				"argument": "{{$ --Value:{{$New-RandomNumber --MinValue:1 --MaxValue:4 --NumberType:Byte}} --Name:TestParameter --Scope:Session}}"
			}
		},
		{
			"rule": {
				"pluginName": "SetSwitchCase",
				"argument": "{{$Get-Parameter --Name:TestParameter --Scope:Session}}",
				"branches": {
					"1": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:1 --Scope:Session}}"
						}
					],
					"2": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:2 --Scope:Session}}"
						}
					],
					"3": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:3 --Scope:Session}}"
						}
					],
					"4": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:4 --Scope:Session}}"
						}
					]
				}
			}
		},
		{
			"rule": {
				"pluginName": "SetSwitchCase",
				"locator": "Id",
				"onElement": "ElementText",
				"branches": {
					"1": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:1 --Scope:Session}}"
						}
					],
					"2": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:2 --Scope:Session}}"
						}
					],
					"ElementText": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:3 --Scope:Session}}"
						}
					],
					"4": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:4 --Scope:Session}}"
						}
					]
				}
			}
		},
		{
			"rule": {
				"pluginName": "SetSwitchCase",
				"onElement": "//input[@id='SetStaleElement']",
				"onAttribute": "onclick",
				"branches": {
					"1": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:1 --Scope:Session}}"
						}
					],
					"2": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:2 --Scope:Session}}"
						}
					],
					"setStaleElement()": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:3 --Scope:Session}}"
						}
					],
					"4": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:4 --Scope:Session}}"
						}
					]
				}
			}
		},
		{
			"rule": {
				"pluginName": "SetSwitchCase",
				"argument": "{{$ --IgnoreCase}}",
				"onElement": "//input[@id='SetStaleElement']",
				"onAttribute": "onclick",
				"regularExpression": "([A-Z])\\w+",
				"branches": {
					"1": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:1 --Scope:Session}}"
						}
					],
					"2": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:2 --Scope:Session}}"
						}
					],
					"staleelement": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:3 --Scope:Session}}"
						}
					],
					"4": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:4 --Scope:Session}}"
						}
					]
				}
			}
		},
		{
			"rule": {
				"pluginName": "SetSwitchCase",
				"argument": "{{$ --SwitchOn:{{$Get-Parameter --Name:TestParameter --Scope:Session}}}}",
				"branches": {
					"1": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:1 --Scope:Session}}"
						}
					],
					"2": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:2 --Scope:Session}}"
						}
					],
					"3": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:3 --Scope:Session}}"
						}
					],
					"4": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:4 --Scope:Session}}"
						}
					]
				}
			}
		},
		{
			"rule": {
				"pluginName": "SetSwitchCase",
				"argument": "{{$ --SwitchOn:{{$Get-Parameter --Name:TestParameter --Scope:Session}}}}",
				"branches": {
					"1": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:1 --Scope:Session}}"
						}
					],
					"2": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:2 --Scope:Session}}"
						}
					],
					"3": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:3 --Scope:Session}}"
						}
					],
					"4": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:4 --Scope:Session}}"
						}
					],
					"Default": [
						{
							"pluginName": "RegisterParameter",
							"argument": "{{$ --Name:TestResult --Value:5 --Scope:Session}}"
						}
					]
				}
			}
		}
	],
	"key": "SetSwitchCase",
	"manifestVersion": 4,
	"pluginType": "Action",
	"parameters": [
		{
			"name": "SwitchOn",
			"type": "String|Expression",
			"mandatory": false,
			"description": [
				"Specifies a static key value to switch on if no `OnElement` is provided. If omitted, the plugin uses the rule’s `Argument` value."
			]
		},
		{
			"name": "IgnoreCase",
			"type": "Switch",
			"mandatory": false,
			"description": [
				"When present, branch lookup is performed case-insensitively."
			]
		}
	],
	"properties": [
		{
			"name": "Argument",
			"type": "String|Expression",
			"mandatory": false,
			"description": [
				"Provides the default key to switch on. If `SwitchOn` parameter is not set, this `Argument` is used as the key."
			]
		},
		{
			"name": "Locator",
			"type": "String",
			"mandatory": false,
			"default": "Xpath",
			"description": [
				"Specifies the locator strategy to identify the target element when extracting the switch key."
			]
		},
		{
			"name": "OnElement",
			"type": "String",
			"mandatory": false,
			"description": [
				"Identifies the selector (XPath, CSS selector, etc.) of the web element from which to extract the switch key."
			]
		},
		{
			"name": "OnAttribute",
			"type": "String",
			"mandatory": false,
			"description": [
				"Specifies the attribute name (e.g., `text` or `value`) to extract from the web element. If omitted, the element’s text content is used."
			]
		},
		{
			"name": "RegularExpression",
			"type": "Regex",
			"mandatory": false,
			"description": [
				"Applies a regular expression to the element’s text or attribute value to extract a substring to use as the switch key."
			]
		}
	],
	"protocol": {
		"apiDocumentation": "",
		"w3c": "None"
	},
	"scopes": [
		"MobileWeb",
		"Web"
	],
	"summary": [
		"The `SetSwitchCase` plugin evaluates a key (static or extracted from an element) and invokes child branches matching that key. It supports regular-expression extraction and case-insensitive matching, falling back to a `Default` branch when no match is found.",
		"Use this plugin to implement data-driven or conditional branching logic within RPA workflows and automated tests."
	]
}
