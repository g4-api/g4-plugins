{
	"author": {
		"name": "Roei Sabag",
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/"
	},
	"categories": [
		"DataManagement"
	],
	"context": {
		"integration": {
			"sequentialWorkflow": {
				"$type": "Action",
				"componentType": "task",
				"iconProvider": "data",
				"model": "ActionRuleModel"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"The CopyParameter plugin helps move values from one parameter to another within automation scripts. It makes it easy to share data between steps by copying values across different scopes. You can set or rely on default source and target scopes to keep your data organized. This ensures that scripts run smoothly with the right information in the right place.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature               | Description                                                                         |",
		"|-----------------------|-------------------------------------------------------------------------------------|",
		"| Copy Parameter Values | Moves a parameter’s value from a source location to a target location.              |",
		"| Scope Management      | Lets you specify or default source and target scopes for parameters.                |",
		"| Environment Support   | Retrieves and sets parameters in various environments, including application scope. |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case                  | Description                                                     |",
		"|---------------------------|-----------------------------------------------------------------|",
		"| Data Transfer             | Share data between script steps by copying parameter values.    |",
		"| Session Management        | Propagate session-specific values to maintain consistent state. |",
		"| Parameter Synchronization | Keep parameters in sync across different automation components. |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case           | Description                                                  |",
		"|--------------------|--------------------------------------------------------------|",
		"| Test Data Handling | Copy values between test cases or steps to set up test data. |",
		"| Environment Setup  | Move configuration parameters to prepare test environments.  |",
		"| Dynamic Test Runs  | Transfer runtime values to support varied test scenarios.    |"
	],
	"examples": [
		{
			"description": [
				"This configuration copies a parameter from a source within the session scope to a target within the same session scope."
			],
			"rule": {
				"argument": "{{$ --TargetParameter:targetParam --TargetScope:Session}}",
				"onAttribute": "Session",
				"onElement": "sourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				"This configuration copies a parameter from a source within the application scope to a target within the user scope, using the system parameters environment."
			],
			"rule": {
				"argument": "{{$ --TargetParameter:targetParam --Environment:SystemParameters --TargetScope:User}}",
				"onAttribute": "Application",
				"onElement": "sourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				"This configuration copies a parameter from a source within the machine scope to a target within the process scope."
			],
			"rule": {
				"argument": "{{$ --TargetParameter:targetParam --TargetScope:Process}}",
				"onAttribute": "Machine",
				"onElement": "sourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				"This configuration copies a parameter from a source within the user scope to a target within the application scope, using the custom environment."
			],
			"rule": {
				"argument": "{{$ --TargetParameter:targetParam --Environment:CustomEnvironment --TargetScope:Application}}",
				"onAttribute": "User",
				"onElement": "sourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				"This configuration copies a parameter from a source within the process scope to a target within the machine scope."
			],
			"rule": {
				"argument": "{{$ --TargetParameter:targetParam --TargetScope:Machine}}",
				"onAttribute": "Process",
				"onElement": "sourceParam",
				"pluginName": "CopyParameter"
			}
		}
	],
	"key": "CopyParameter",
	"manifestVersion": 4,
	"parameters": [
		{
			"default": "SystemParameters",
			"description": [
				"Specifies the environment in which the parameters are managed. It allows for defining different contexts or environments where the parameters are stored and retrieved from.",
				"This parameter is relevant only when using the Application scope. It allows managing multiple environments that can hold different values while using the same parameter names or a completely different parameter set."
			],
			"mandatory": false,
			"name": "Environment",
			"type": "String"
		},
		{
			"description": [
				"Specifies the target parameter to which the value will be copied. This is the parameter that will receive the value from the source parameter."
			],
			"mandatory": true,
			"name": "TargetParameter",
			"type": "String"
		},
		{
			"description": [
				"Specifies the scope of the target parameter. The scope defines where the parameter is stored and can be one of several predefined scopes such as 'Session', 'UserScope', etc."
			],
			"mandatory": false,
			"name": "TargetScope",
			"type": "SetParameter"
		}
	],
	"pluginType": "Action",
	"properties": [
		{
			"default": "Session",
			"description": [
				"Specifies the scope of the source parameter. The scope defines where the parameter is stored and can be one of several predefined scopes such as 'Session', 'SystemScope', etc."
			],
			"mandatory": false,
			"name": "OnAttribute",
			"type": "GetParameter"
		},
		{
			"description": [
				"Specifies the source parameter whose value will be copied."
			],
			"mandatory": true,
			"name": "OnElement",
			"type": "String"
		}
	],
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"scopes": [
		"Any"
	],
	"summary": [
		"The CopyParameter plugin automatically moves values from one part of an automation to another.",
		"It takes a value from one step and makes it available where it’s needed next.",
		"This keeps your automated tasks in sync and cuts down on manual work."
	]
}
