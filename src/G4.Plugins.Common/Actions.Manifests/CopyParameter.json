{
	"author": {
		"name": "Roei Sabag",
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/"
	},
	"categories": [
		"DataManagement"
	],
	"context": {
		"integration": {
			"sequentialWorkflow": {
				"$type": "Action",
				"componentType": "task",
				"iconProvider": "data",
				"model": "ActionRuleModel"
			}
		}
	},
	"description": [
		"### Purpose",
		"",
		"The CopyParameter plugin helps move values from one parameter to another within automation scripts. It makes it easy to share data between steps by copying values across different scopes. You can set or rely on default source and target scopes to keep your data organized. This ensures that scripts run smoothly with the right information in the right place.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature               | Description                                                                         |",
		"|-----------------------|-------------------------------------------------------------------------------------|",
		"| Copy Parameter Values | Moves a parameter's value from a source location to a target location.              |",
		"| Scope Management      | Lets you specify or default source and target scopes for parameters.                |",
		"| Environment Support   | Retrieves and sets parameters in various environments, including application scope. |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case                  | Description                                                     |",
		"|---------------------------|-----------------------------------------------------------------|",
		"| Data Transfer             | Share data between script steps by copying parameter values.    |",
		"| Session Management        | Propagate session-specific values to maintain consistent state. |",
		"| Parameter Synchronization | Keep parameters in sync across different automation components. |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case           | Description                                                  |",
		"|--------------------|--------------------------------------------------------------|",
		"| Test Data Handling | Copy values between test cases or steps to set up test data. |",
		"| Environment Setup  | Move configuration parameters to prepare test environments.  |",
		"| Dynamic Test Runs  | Transfer runtime values to support varied test scenarios.    |"
	],
	"examples": [
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The session parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the source parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_session_sourceparam_to_targetparam",
					"version": "1.0"
				},
				"labels": [
					"CopyParameter",
					"ParameterOperation",
					"SessionParameter"
				]
			},
			"description": [
				"### Session Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the session parameter `SourceParam` and stores it into another session parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as-is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Session}}",
				"onAttribute": "Session",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},

		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Environment not found",
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The application‑scoped parameter `TargetParam` is set to the full text value of the session parameter `SourceParam`.",
					"notes": "Copies the full string from the source session parameter, including any whitespace or formatting. Fails if the source parameter does not exist, if the environment is invalid, or if writing to the target parameter fails.",
					"test_case": "parameter_copy_session_to_application_botrepository",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"SessionParameter"
				]
			},
			"description": [
				"### Session to Application Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the session parameter `SourceParam` and stores it into an application‑scoped parameter named `TargetParam` within the `BotRepository` environment.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the application‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Application}}",
				"onAttribute": "Session",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},

		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The application‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the session parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_session_to_application",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"SessionParameter"
				]
			},
			"description": [
				"### Session to Application Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the session parameter `SourceParam` and stores it into an application‑scoped parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the application‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Application}}",
				"onAttribute": "Session",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The machine‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the session parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_session_to_machine",
					"version": "1.0"
				},
				"labels": [
					"CopyParameter",
					"MachineParameter",
					"ParameterOperation",
					"SessionParameter"
				]
			},
			"description": [
				"### Session to Machine Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the session parameter `SourceParam` and stores it into a machine‑scoped parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the machine‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Machine}}",
				"onAttribute": "Session",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The user‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the session parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_session_to_user",
					"version": "1.0"
				},
				"labels": [
					"CopyParameter",
					"ParameterOperation",
					"SessionParameter",
					"UserParameter"
				]
			},
			"description": [
				"### Session to User Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the session parameter `SourceParam` and stores it into a user‑scoped parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the user‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:User}}",
				"onAttribute": "Session",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The process‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the session parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_session_to_process",
					"version": "1.0"
				},
				"labels": [
					"CopyParameter",
					"ParameterOperation",
					"ProcessParameter",
					"SessionParameter"
				]
			},
			"description": [
				"### Session to Process Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the session parameter `SourceParam` and stores it into a process‑scoped parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the process‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Process}}",
				"onAttribute": "Session",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},


		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The session‑scoped parameter `TargetParam` is set to the full text value of the application‑scoped parameter `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the session parameter fails.",
					"test_case": "parameter_copy_application_to_session",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"SessionParameter"
				]
			},
			"description": [
				"### Application to Session Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a session‑scoped parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Session}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Environment not found",
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The application‑scoped parameter `TargetParam` in `BotRepository` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. Fails if the source parameter does not exist, if the environment is invalid, or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_application_botrepository",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation"
				]
			},
			"description": [
				"### Application to Application Parameter Copy Action in BotRepository",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into an application‑scoped parameter named `TargetParam` within the `BotRepository` environment.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the target environment is valid; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Application}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The application‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. When no environment is specified, the default application environment `SystemParameters` is used. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_application",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation"
				]
			},
			"description": [
				"### Application to Application Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into another application‑scoped parameter named `TargetParam` in the default application environment `SystemParameters`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Application}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},

		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Environment not found",
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The machine‑scoped parameter `TargetParam` in `BotRepository` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. Fails if the source parameter does not exist, if the environment is invalid, or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_machine_botrepository",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"MachineParameter",
					"ParameterOperation"
				]
			},
			"description": [
				"### Application to Machine Parameter Copy Action in BotRepository",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a machine‑scoped parameter named `TargetParam` within the `BotRepository` environment.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the machine‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Machine}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The machine‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. When no environment is specified, the default application environment `SystemParameters` is used. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_machine",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"MachineParameter",
					"ParameterOperation"
				]
			},
			"description": [
				"### Application to Machine Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a machine‑scoped parameter named `TargetParam` in the default application environment `SystemParameters`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the machine‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Machine}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Environment not found",
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The user‑scoped parameter `TargetParam` in `BotRepository` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. Fails if the source parameter does not exist, if the environment is invalid, or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_user_botrepository",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"UserParameter"
				]
			},
			"description": [
				"### Application to User Parameter Copy Action in BotRepository",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a user‑scoped parameter named `TargetParam` within the `BotRepository` environment.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the user‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:User}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},

		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The user‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. When no environment is specified, the default application environment `SystemParameters` is used. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_user",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"UserParameter"
				]
			},
			"description": [
				"### Application to User Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a user‑scoped parameter named `TargetParam` in the default application environment `SystemParameters`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:User}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Environment not found",
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The process‑scoped parameter `TargetParam` in `BotRepository` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. Fails if the source parameter does not exist, if the environment is invalid, or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_process_botrepository",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"ProcessParameter"
				]
			},
			"description": [
				"### Application to Process Parameter Copy Action in BotRepository",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a process‑scoped parameter named `TargetParam` within the `BotRepository` environment.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the process‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Process}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The process‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the application parameter, including any whitespace or formatting. When no environment is specified, the default application environment `SystemParameters` is used. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_application_to_process",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"ParameterOperation",
					"ProcessParameter"
				]
			},
			"description": [
				"### Application to Process Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the application‑scoped parameter `SourceParam` and stores it into a process‑scoped parameter named `TargetParam` in the default application environment `SystemParameters`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Process}}",
				"onAttribute": "Application",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},

		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The session‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the machine parameter, including any whitespace or formatting. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_machine_to_session",
					"version": "1.0"
				},
				"labels": [
					"CopyParameter",
					"MachineParameter",
					"ParameterOperation",
					"SessionParameter"
				]
			},
			"description": [
				"### Machine to Session Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the machine‑scoped parameter `SourceParam` and stores it into a session‑scoped parameter named `TargetParam`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Session}}",
				"onAttribute": "Machine",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The application‑scoped parameter `TargetParam` in `BotRepository` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the machine parameter, including any whitespace or formatting. Fails if the source parameter does not exist, if the environment is invalid, or if writing to the target parameter fails.",
					"test_case": "parameter_copy_machine_to_application_botrepository",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"MachineParameter",
					"ParameterOperation"
				]
			},
			"description": [
				"### Machine to Application Parameter Copy Action in BotRepository",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the machine‑scoped parameter `SourceParam` and stores it into an application‑scoped parameter named `TargetParam` within the `BotRepository` environment.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists and the application‑scoped target parameter can be written; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Application}}",
				"onAttribute": "Machine",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Parameter value empty",
						"Source parameter not found",
						"Target parameter write failure"
					],
					"expected_result": "The application‑scoped parameter `TargetParam` is set to the full text value of `SourceParam`.",
					"notes": "Copies the full string from the machine parameter, including any whitespace or formatting. When no environment is specified, the default application environment `SystemParameters` is used. Fails if the source parameter does not exist or if writing to the target parameter fails.",
					"test_case": "parameter_copy_machine_to_application",
					"version": "1.0"
				},
				"labels": [
					"ApplicationParameter",
					"CopyParameter",
					"MachineParameter",
					"ParameterOperation"
				]
			},
			"description": [
				"### Machine to Application Parameter Copy Action",
				"",
				"This example demonstrates how the CopyParameter plugin takes the full text value of the machine‑scoped parameter `SourceParam` and stores it into an application‑scoped parameter named `TargetParam` in the default application environment `SystemParameters`.",
				"The operation uses the complete text value of `SourceParam`, including any whitespace or formatting.",
				"No value transformation occurs; the entire text is copied as‑is.",
				"The action succeeds only if `SourceParam` exists; otherwise, it fails."
			],
			"rule": {
				"$type": "Action",
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Application}}",
				"onAttribute": "Machine",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},

		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Machine}}",
				"onAttribute": "Machine",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:User}}",
				"onAttribute": "Machine",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Process}}",
				"onAttribute": "Machine",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},



		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Session}}",
				"onAttribute": "User",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Application}}",
				"onAttribute": "User",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Application}}",
				"onAttribute": "User",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Machine}}",
				"onAttribute": "User",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:User}}",
				"onAttribute": "User",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Process}}",
				"onAttribute": "User",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},



		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Session}}",
				"onAttribute": "Process",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --Environment:BotRepository --TargetScope:Application}}",
				"onAttribute": "Process",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Application}}",
				"onAttribute": "Process",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Machine}}",
				"onAttribute": "Process",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:User}}",
				"onAttribute": "Process",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"argument": "{{$ --TargetParameter:TargetParam --TargetScope:Process}}",
				"onAttribute": "Process",
				"onElement": "SourceParam",
				"pluginName": "CopyParameter"
			}
		}
	],
	"key": "CopyParameter",
	"manifestVersion": 4,
	"parameters": [
		{
			"default": "SystemParameters",
			"description": [
				"Specifies the environment in which the parameters are managed. It allows for defining different contexts or environments where the parameters are stored and retrieved from.",
				"This parameter is relevant only when using the Application scope. It allows managing multiple environments that can hold different values while using the same parameter names or a completely different parameter set."
			],
			"mandatory": false,
			"name": "Environment",
			"type": "String"
		},
		{
			"description": [
				"Specifies the target parameter to which the value will be copied. This is the parameter that will receive the value from the source parameter."
			],
			"mandatory": true,
			"name": "TargetParameter",
			"type": "String"
		},
		{
			"description": [
				"Specifies the scope of the target parameter. The scope defines where the parameter is stored and can be one of several predefined scopes such as 'Session', 'UserScope', etc."
			],
			"mandatory": false,
			"name": "TargetScope",
			"type": "SetParameter"
		}
	],
	"pluginType": "Action",
	"properties": [
		{
			"default": "Session",
			"description": [
				"Specifies the scope of the source parameter. The scope defines where the parameter is stored and can be one of several predefined scopes such as 'Session', 'SystemScope', etc."
			],
			"mandatory": false,
			"name": "OnAttribute",
			"type": "GetParameter"
		},
		{
			"description": [
				"Specifies the source parameter whose value will be copied."
			],
			"mandatory": true,
			"name": "OnElement",
			"type": "String"
		}
	],
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"scopes": [
		"Any"
	],
	"summary": [
		"The CopyParameter plugin automatically moves values from one part of an automation to another.",
		"It takes a value from one step and makes it available where it's needed next."
	]
}
