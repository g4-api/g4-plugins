{
	"author": {
		"name": "Roei Sabag",
		"link": "https://www.linkedin.com/in/roei-sabag-247aa18/"
	},
	"context": {
		"integration": {
			"sequentialWorkflow": {
				"$type": "Action",
				"componentType": "container",
				"iconProvider": "loop",
				"model": "ActionRuleModel"
			}
		}
	},
	"categories": [
		"Loops"
	],
	"description": [
		"### Purpose",
		"",
		"The InvokeForEachLoop plugin finds all elements matching your locator and runs a set of actions on each one. To operate on the entire collection, set onElement to \".\" and omit the locator. You can also specify a different locator to decide where actions take place. It supports nested loops for multi-level workflows, making it easier to automate repetitive tasks in RPA and automated testing.",
		"",
		"### Key Features and Functionality",
		"",
		"| Feature                     | Description                                                         |",
		"|-----------------------------|---------------------------------------------------------------------|",
		"| Element Iteration           | Finds all elements matching the locator and loops through each one. |",
		"| Sequential Execution        | Runs actions in order on each element for a clear workflow.         |",
		"| Alternative Locator Support | Lets you specify a different locator for where actions run.         |",
		"| Nested Loop Capability      | Allows loops inside loops for multi-level workflows.                |",
		"",
		"### Usages in RPA",
		"",
		"| Use Case            | Description                                                                       |",
		"|---------------------|-----------------------------------------------------------------------------------|",
		"| Data Processing     | Process each item in a list by running data entry, validation, or transformation. |",
		"| Batch Operations    | Perform a series of tasks on groups of files, records, or transactions in order.  |",
		"| Dynamic Interaction | Work with UI items created at runtime by clicking, typing, or checking content.   |",
		"",
		"### Usages in Automation Testing",
		"",
		"| Use Case               | Description                                                                 |",
		"|------------------------|-----------------------------------------------------------------------------|",
		"| Element Verification   | Check each UI element to confirm its state or value matches expectations.   |",
		"| Data-Driven Testing    | Run tests across different data sets by looping through inputs and actions. |",
		"| UI Interaction Testing | Simulate user steps like clicks or form entries on each element.            |"
	],
	"examples": [
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Empty elements list",
						"Incorrect XPath usage",
						"Loop action or rule failure",
						"Unexpected DOM structure"
					],
					"expected_result": "All pagination buttons matching the XPath selector are processed with Click; exceptions are recorded but do not halt execution.",
					"notes": "The InvokeForEachLoop plugin locates all elements matching the XPath selector `//ul[@id='Pagination1']/li/button` and performs a Click on each. If no elements are found, an exception is logged and the loop is skipped. If a Click action throws an exception, it is recorded and the loop continues. The process only stops on configured stop-on-error.",
					"test_case": "invoke_foreach_click_pagination_xpath",
					"version": "1.0"
				},
				"labels": [
					"InvokeForEachLoop",
					"Loop"
				]
			},
			"description": [
				"### Click Each Pagination Button Using XPath",
				"",
				"This example demonstrates how the InvokeForEachLoop plugin iterates over each button element matching the XPath selector `//ul[@id='Pagination1']/li/button` and performs a Click action on each.",
				"The inner rule uses `.` to refer to the current element in the loop context.",
				"If no buttons are found, an exception is added and the loop is skipped. ",
				"If a Click action fails on any element, an exception is recorded and execution continues to the next element. ",
				"The overall process does not stop unless explicitly configured to stop on error."
			],
			"rule": {
				"$type": "Action",
				"onElement": "//ul[@id='Pagination1']/li/button",
				"pluginName": "InvokeForEachLoop",
				"rules": [
					{
						"$type": "Action",
						"onElement": ".",
						"pluginName": "Click"
					}
				]
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Empty elements list",
						"Incorrect CSS selector usage",
						"Loop action or rule failure",
						"Unexpected DOM structure"
					],
					"expected_result": "All pagination buttons matching the CSS selector are processed with Click; exceptions are recorded but do not halt execution.",
					"notes": "The InvokeForEachLoop plugin locates all elements matching the CSS selector `#Pagination1 > li > button` and performs a Click on each. If no elements are found, an exception is logged and the loop is skipped. If a Click action throws an exception, it is recorded and the loop continues. The process only stops on configured stop-on-error.",
					"test_case": "invoke_foreach_click_pagination_css",
					"version": "1.0"
				},
				"labels": [
					"InvokeForEachLoop",
					"Loop"
				]
			},
			"description": [
				"### Click Each Pagination Button Using CSS Selector",
				"",
				"This example demonstrates how the InvokeForEachLoop plugin iterates over each button element matching the CSS selector `#Pagination1 > li > button` and performs a Click action on each.",
				"The inner rule uses `.` to refer to the current element in the loop context.",
				"If no buttons are found, an exception is added and the loop is skipped. ",
				"If a Click action fails on any element, an exception is recorded and execution continues to the next element. ",
				"The overall process does not stop unless explicitly configured to stop on error."
			],
			"rule": {
				"$type": "Action",
				"locator": "CssSelector",
				"onElement": "#Pagination1 > li > button",
				"pluginName": "InvokeForEachLoop",
				"rules": [
					{
						"$type": "Action",
						"onElement": ".",
						"pluginName": "Click"
					}
				]
			}
		},

		{
			"context": {
				"annotations": {
					"test_case": "invoke_foreach_click_pagination_li_xpath_inner_xpath",
					"expected_result": "Each `<li>` matching `//ul[@class='pagination']/li` has its child button clicked; exceptions are recorded but do not halt execution.",
					"notes": "InvokeForEachLoop locates each `<li>` via XPath and performs a Click on its child via relative XPath. Exceptions for missing elements or click failures are logged without stopping the loop.",
					"edge_cases": [
						"Empty elements list",
						"Incorrect XPath usage",
						"Loop action or rule failure",
						"Unexpected DOM structure"
					],
					"version": "1.0"
				},
				"labels": [
					"InvokeForEachLoop",
					"Loop"
				]
			},
			"description": [
				"### Click Each Pagination Button Using XPath and Relative XPath",
				"",
				"This example demonstrates how the InvokeForEachLoop plugin iterates over each `<li>` element matching the XPath selector `//ul[@class='pagination']/li` and performs a Click action on its child button element selected via relative XPath `./button`.",
				"The inner rule uses the XPath `./button` to reference the button within the current list item.",
				"If no elements are found, an exception is logged and the loop is skipped. ",
				"If a Click action within any iteration throws an exception, it is recorded and the loop continues. ",
				"The process does not stop unless configured to stop on error."
			],
			"rule": {
				"$type": "Action",
				"onElement": "//ul[@class='pagination']/li",
				"pluginName": "InvokeForEachLoop",
				"rules": [
					{
						"$type": "Action",
						"onElement": "./button",
						"pluginName": "Click"
					}
				]
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Empty elements list",
						"Incorrect XPath usage",
						"Loop action or rule failure",
						"Unexpected DOM structure"
					],
					"expected_result": "Each `<li>` matching `//ul[@class='pagination']/li` has its child button clicked; exceptions are recorded but do not halt execution.",
					"notes": "InvokeForEachLoop locates each `<li>` via XPath and performs a Click on its child via CSS selector. Exceptions for missing elements or click failures are logged without stopping the loop.",
					"test_case": "invoke_foreach_click_pagination_li_xpath_inner_css",
					"version": "1.0"
				},
				"labels": [
					"InvokeForEachLoop",
					"Loop"
				]
			},
			"description": [
				"### Click Each Pagination Button Using XPath and CSS Selector",
				"",
				"This example demonstrates how the InvokeForEachLoop plugin iterates over each `<li>` element matching the XPath selector `//ul[@class='pagination']/li` and performs a Click action on its child button element selected via CSS selector `button`.",
				"The inner rule uses the CSS selector `button` to reference the button within the current list item.",
				"If no elements are found, an exception is logged and the loop is skipped. ",
				"If a Click action within any iteration throws an exception, it is recorded and the loop continues. ",
				"The process does not stop unless configured to stop on error."
			],
			"rule": {
				"$type": "Action",
				"onElement": "//ul[@class='pagination']/li",
				"pluginName": "InvokeForEachLoop",
				"rules": [
					{
						"$type": "Action",
						"locator": "CssSelector",
						"onElement": "button",
						"pluginName": "Click"
					}
				]
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Empty elements list",
						"Incorrect CSS selector usage",
						"Loop action or rule failure",
						"Unexpected DOM structure"
					],
					"expected_result": "Each `<li>` matching `.pagination > li` has its child button clicked; exceptions are recorded but do not halt execution.",
					"notes": "InvokeForEachLoop locates each `<li>` via CSS selector and performs a Click on its child via relative XPath. Exceptions for missing elements or click failures are logged without stopping the loop.",
					"test_case": "invoke_foreach_click_pagination_li_css_inner_xpath",
					"version": "1.0"
				},
				"labels": [
					"InvokeForEachLoop",
					"Loop"
				]
			},
			"description": [
				"### Click Each Pagination Button Using CSS Selector and Relative XPath",
				"",
				"This example demonstrates how the InvokeForEachLoop plugin iterates over each `<li>` element matching the CSS selector `.pagination > li` and performs a Click action on its child button element selected via relative XPath `./button`.",
				"The inner rule uses the XPath `./button` to reference the button within the current list item.",
				"If no elements are found, an exception is logged and the loop is skipped. ",
				"If a Click action within any iteration throws an exception, it is recorded and the loop continues. ",
				"The process does not stop unless configured to stop on error."
			],
			"rule": {
				"$type": "Action",
				"locator": "CssSelector",
				"onElement": ".pagination > li",
				"pluginName": "InvokeForEachLoop",
				"rules": [
					{
						"$type": "Action",
						"onElement": "./button",
						"pluginName": "Click"
					}
				]
			}
		},
		{
			"context": {
				"annotations": {
					"edge_cases": [
						"Empty elements list",
						"Incorrect CSS selector usage",
						"Loop action or rule failure",
						"Unexpected DOM structure"
					],
					"expected_result": "Each `<li>` matching `.pagination > li` has its child button clicked; exceptions are recorded but do not halt execution.",
					"notes": "InvokeForEachLoop locates each `<li>` via CSS selector and performs a Click on its child via CSS selector. Exceptions for missing elements or click failures are logged without stopping the loop.",
					"test_case": "invoke_foreach_click_pagination_li_css_inner_css",
					"version": "1.0"
				},
				"labels": [
					"InvokeForEachLoop",
					"Loop"
				]
			},
			"description": [
				"### Click Each Pagination Button Using CSS Selector",
				"",
				"This example demonstrates how the InvokeForEachLoop plugin iterates over each `<li>` element matching the CSS selector `.pagination > li` and performs a Click action on its child button element selected via CSS selector `button`.",
				"The inner rule uses the CSS selector `button` to reference the button within the current list item.",
				"If no elements are found, an exception is logged and the loop is skipped. ",
				"If a Click action within any iteration throws an exception, it is recorded and the loop continues. ",
				"The process does not stop unless configured to stop on error."
			],
			"rule": {
				"$type": "Action",
				"locator": "CssSelector",
				"onElement": ".pagination > li",
				"pluginName": "InvokeForEachLoop",
				"rules": [
					{
						"$type": "Action",
						"locator": "CssSelector",
						"onElement": "button",
						"pluginName": "Click"
					}
				]
			}
		},



		{
			"description": [
				""
			],
			"rule": {
				"$type": "Action",
				"pluginName": "InvokeForEachLoop",
				"onElement": "//ul[@class='pagination']",
				"rules": [
					{
						"$type": "Action",
						"pluginName": "InvokeForEachLoop",
						"onElement": "./li/button",
						"rules": [
							{
								"$type": "Action",
								"pluginName": "Click"
							}
						]
					}
				]
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"$type": "Action",
				"pluginName": "InvokeForEachLoop",
				"onElement": "//ul[@class='pagination']",
				"rules": [
					{
						"$type": "Action",
						"pluginName": "InvokeForEachLoop",
						"locator": "CssSelector",
						"onElement": "li > button",
						"rules": [
							{
								"$type": "Action",
								"pluginName": "Click"
							}
						]
					}
				]
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"$type": "Action",
				"pluginName": "InvokeForEachLoop",
				"locator": "CssSelector",
				"onElement": ".pagination",
				"rules": [
					{
						"$type": "Action",
						"pluginName": "InvokeForEachLoop",
						"onElement": "./li/button",
						"rules": [
							{
								"$type": "Action",
								"pluginName": "Click"
							}
						]
					}
				]
			}
		},
		{
			"description": [
				""
			],
			"rule": {
				"$type": "Action",
				"pluginName": "InvokeForEachLoop",
				"locator": "CssSelector",
				"onElement": ".pagination",
				"rules": [
					{
						"$type": "Action",
						"pluginName": "InvokeForEachLoop",
						"locator": "CssSelector",
						"onElement": "li > button",
						"rules": [
							{
								"$type": "Action",
								"pluginName": "Click"
							}
						]
					}
				]
			}
		}
	],






	"key": "InvokeForEachLoop",
	"manifestVersion": 4,
	"pluginType": "Action",
	"properties": [
		{
			"default": "Xpath",
			"description": [
				"Specifies the locator strategy to find the web elements to be iterated. Supported locator types include `CssSelector`, `XPath`, `LinkText`, etc."
			],
			"mandatory": false,
			"name": "Locator",
			"type": "String"
		},
		{
			"description": [
				"Specifies the locator used to find the elements that the loop will iterate over.",
				"This property is mandatory and defines how the plugin identifies the collection of elements to process."
			],
			"mandatory": true,
			"name": "OnElement",
			"type": "String"
		},
		{
			"description": [
				"Defines a sequence of actions or instructions to be executed on each element found by the locator.",
				"Each action can interact with the current element or use an alternative locator as needed."
			],
			"mandatory": true,
			"name": "Rules",
			"type": "Array"
		}
	],
	"protocol": {
		"apiDocumentation": "None",
		"w3c": "None"
	},
	"scopes": [
		"Any"
	],
	"summary": [
		"The `InvokeForEachLoop` plugin enables efficient iteration over elements identified by a specified locator.",
		"It allows automation scripts to execute a series of actions on each element sequentially, supporting complex workflows with nested loops.",
		"Key use cases include data processing, dynamic UI interactions in RPA, and comprehensive automation testing scenarios."
	]
}
